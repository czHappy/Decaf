FUNCTION _Main_New : 
BASIC BLOCK 0 : 
  Def     = [ _T0 _T1 _T2 ]
  liveUse = [ _T1 ]
  liveIn  = [ _T1 ]
  liveOut = [ _T1 ]
    _T0 = 4 [ _T0 ]
    parm _T0 [ ]
    _T1 =  call _Alloc [ _T1 ]
    _T2 = VTBL <_Main> [ _T1 _T2 ]
    *(_T1 + 0) = _T2 [ _T1 ]
END BY RETURN, result = _T1

FUNCTION main : 
BASIC BLOCK 0 : 
  Def     = [ _T4 _T5 _T6 ]
  liveUse = [ _T6 ]
  liveIn  = [ -4 _T6 _T15 _T17 ]
  liveOut = [ -4 _T4 _T6 _T15 _T17 ]
    _T4 = 2 [ -4 _T4 _T5 _T15 _T17 ]
    _T5 = 0 [ -4 _T4 _T5 _T15 _T17 ]
    _T6 = (_T4 < _T5) [ -4 _T4 _T6 _T15 _T17 ]
END BY BEQZ, if _T6 = 
    0 : goto 2; 1 : goto 1
BASIC BLOCK 1 : 
  Def     = [ _T7 ]
  liveUse = [ ]
  liveIn  = [ -4 _T4 _T6 _T15 _T17 ]
  liveOut = [ -4 _T4 _T6 _T15 _T17 ]
    _T7 = "Decaf runtime error: Cannot create negative-sized array\n" [ -4 _T4 _T6 _T7 _T15 _T17 ]
    parm _T7 [ -4 _T4 _T6 _T15 _T17 ]
    call _PrintString [ -4 _T4 _T6 _T15 _T17 ]
    call _Halt [ -4 _T4 _T6 _T15 _T17 ]
END BY BRANCH, goto 2
BASIC BLOCK 2 : 
  Def     = [ _T8 _T9 _T10 _T11 _T12 ]
  liveUse = [ _T4 ]
  liveIn  = [ -4 _T4 _T6 _T15 _T17 ]
  liveOut = [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
    _T8 = 4 [ -4 _T4 _T6 _T8 _T12 _T15 _T17 ]
    _T9 = (_T8 * _T4) [ -4 _T4 _T6 _T8 _T9 _T12 _T15 _T17 ]
    _T10 = (_T8 + _T9) [ -4 _T4 _T6 _T8 _T10 _T12 _T15 _T17 ]
    parm _T10 [ -4 _T4 _T6 _T8 _T10 _T12 _T15 _T17 ]
    _T11 =  call _Alloc [ -4 _T4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
    *(_T11 + 0) = _T4 [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
    _T12 = 0 [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
    _T11 = (_T11 + _T10) [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
END BY BRANCH, goto 3
BASIC BLOCK 3 : 
  Def     = [ _T10 ]
  liveUse = [ _T8 _T10 ]
  liveIn  = [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
  liveOut = [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
    _T10 = (_T10 - _T8) [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
END BY BEQZ, if _T10 = 
    0 : goto 5; 1 : goto 4
BASIC BLOCK 4 : 
  Def     = [ _T11 ]
  liveUse = [ _T8 _T11 _T12 ]
  liveIn  = [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
  liveOut = [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
    _T11 = (_T11 - _T8) [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
    *(_T11 + 0) = _T12 [ -4 _T6 _T8 _T10 _T11 _T12 _T15 _T17 ]
END BY BRANCH, goto 3
BASIC BLOCK 5 : 
  Def     = [ _T3 _T13 _T14 _T15 ]
  liveUse = [ -4 _T11 _T15 ]
  liveIn  = [ -4 _T6 _T11 _T15 _T17 ]
  liveOut = [ 0 _T3 _T6 _T13 _T15 _T17 ]
    _T3 = _T11 [ 0 _T3 _T6 _T13 _T17 ]
    _T13 = 2 [ 0 _T3 _T6 _T13 _T17 ]
    _T14 = *(_T3 - 4) [ 0 _T3 _T6 _T13 _T14 _T17 ]
    _T15 = (_T13 < _T14) [ 0 _T3 _T6 _T13 _T15 _T17 ]
END BY BEQZ, if _T15 = 
    0 : goto 7; 1 : goto 6
BASIC BLOCK 6 : 
  Def     = [ _T16 _T17 ]
  liveUse = [ _T13 _T17 ]
  liveIn  = [ 0 _T3 _T6 _T13 _T15 _T17 ]
  liveOut = [ 0 _T3 _T6 _T13 _T15 _T17 ]
    _T16 = 0 [ 0 _T3 _T6 _T13 _T15 _T16 ]
    _T17 = (_T13 < _T16) [ 0 _T3 _T6 _T13 _T15 _T17 ]
END BY BEQZ, if _T17 = 
    0 : goto 8; 1 : goto 7
BASIC BLOCK 7 : 
  Def     = [ _T18 ]
  liveUse = [ ]
  liveIn  = [ 0 _T3 _T6 _T13 _T15 _T17 ]
  liveOut = [ 0 _T3 _T6 _T13 _T15 _T17 ]
    _T18 = "Decaf runtime error: Array subscript out of bounds\n" [ 0 _T3 _T6 _T13 _T15 _T17 _T18 ]
    parm _T18 [ 0 _T3 _T6 _T13 _T15 _T17 ]
    call _PrintString [ 0 _T3 _T6 _T13 _T15 _T17 ]
    call _Halt [ 0 _T3 _T6 _T13 _T15 _T17 ]
END BY BRANCH, goto 8
BASIC BLOCK 8 : 
  Def     = [ _T19 _T20 _T21 _T22 _T23 _T24 _T25 _T26 ]
  liveUse = [ 0 _T3 _T13 ]
  liveIn  = [ 0 _T3 _T6 _T13 _T15 _T17 ]
  liveOut = [ -4 _T6 _T15 _T17 ]
    _T19 = 4 [ -4 _T3 _T6 _T13 _T15 _T17 _T19 _T23 _T24 ]
    _T20 = (_T13 * _T19) [ -4 _T3 _T6 _T13 _T15 _T17 _T20 _T23 _T24 ]
    _T21 = (_T3 + _T20) [ -4 _T3 _T6 _T13 _T15 _T17 _T21 _T23 _T24 ]
    _T22 = *(_T21 + 0) [ -4 _T3 _T6 _T13 _T15 _T17 _T23 _T24 ]
    _T23 = 0 [ -4 _T3 _T6 _T13 _T15 _T17 _T23 _T24 ]
    _T24 = 4 [ -4 _T3 _T6 _T13 _T15 _T17 _T23 _T24 ]
    _T25 = (_T13 * _T24) [ -4 _T3 _T6 _T15 _T17 _T23 _T25 ]
    _T26 = (_T3 + _T25) [ -4 _T6 _T15 _T17 _T23 _T26 ]
    *(_T26 + 0) = _T23 [ -4 _T6 _T15 _T17 ]
END BY RETURN, void result

